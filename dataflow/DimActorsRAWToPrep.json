{
	"name": "DimActorsRAWToPrep",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "VA_Actors_From_RAW",
						"type": "DatasetReference"
					},
					"name": "VAActors"
				},
				{
					"dataset": {
						"referenceName": "FourthCoffee_Actors_From_RAW",
						"type": "DatasetReference"
					},
					"name": "FCActors"
				},
				{
					"dataset": {
						"referenceName": "SR_MovieFlat_RAW",
						"type": "DatasetReference"
					},
					"name": "SRMOVIEFLAT"
				},
				{
					"dataset": {
						"referenceName": "VA_MoviesActors_From_Raw",
						"type": "DatasetReference"
					},
					"name": "VAMovieActorRAW"
				},
				{
					"dataset": {
						"referenceName": "FC_MovieActors_From_RAW",
						"type": "DatasetReference"
					},
					"name": "FCMovieActorRAW"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DimActors_To_DLPREP",
						"type": "DatasetReference"
					},
					"name": "OutletToDLPREP"
				}
			],
			"transformations": [
				{
					"name": "MergeVAFC"
				},
				{
					"name": "NullChecks"
				},
				{
					"name": "SurrogateKey1"
				},
				{
					"name": "ReduceDupActor"
				},
				{
					"name": "RemoveCount"
				},
				{
					"name": "AddSRActorUUID"
				},
				{
					"name": "Join1"
				},
				{
					"name": "Select1"
				}
			],
			"script": "\n\nsource(output(\n\t\tActorID as string,\n\t\tActorName as string,\n\t\tGender as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> VAActors\nsource(output(\n\t\tActorID as string,\n\t\tActorName as string,\n\t\tGender as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> FCActors\nsource(output(\n\t\tid as string,\n\t\tname as string,\n\t\ttitle as string,\n\t\tgenre as string,\n\t\trating as string,\n\t\truntime as string,\n\t\treleaseYear as string,\n\t\tavailabilityDate as string,\n\t\tstreamingAvailabilityDate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> SRMOVIEFLAT\nsource(output(\n\t\tMovieActorID as string,\n\t\tMovieID as string,\n\t\tActorID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> VAMovieActorRAW\nsource(output(\n\t\tMovieActorID as string,\n\t\tMovieID as string,\n\t\tActorID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> FCMovieActorRAW\nFCActors, VAActors, AddSRActorUUID union(byName: true)~> MergeVAFC\nMergeVAFC derive(ActorName = case(isNull(ActorName),'Unknown Actor Name',ActorName),\n\t\tGender = case(isNull(Gender),'U',Gender)) ~> NullChecks\nNullChecks keyGenerate(output(ActorSK as long),\n\tstartAt: 1L) ~> SurrogateKey1\nSRMOVIEFLAT aggregate(groupBy(name),\n\tActorCount = count(name)) ~> ReduceDupActor\nReduceDupActor select(mapColumn(\n\t\tActorName = name\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveCount\nRemoveCount derive(ActorID = uuid()) ~> AddSRActorUUID\nSRMOVIEFLAT, AddSRActorUUID join(name == ActorName,\n\tjoinType:'inner',\n\tbroadcast: 'none')~> Join1\nJoin1 select(mapColumn(\n\t\tMovieID = id,\n\t\tActorID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSurrogateKey1 sink(input(\n\t\t{02e7ebe8-e09c-40f5-ba46-ab465bd0f73f} as string,\n\t\tKelemen as string,\n\t\tOrsos as string,\n\t\t{5555550673} as string,\n\t\t{2017-01-03 00:00:00.00000004} as string,\n\t\t{2017-01-03 00:00:00.00000005} as string,\n\t\tSR as string,\n\t\t{3d034f2a-b657-4c80-b312-6adb8e1c99b8} as string,\n\t\t{155 Pine St} as string,\n\t\tProp_9 as string,\n\t\tPortland as string,\n\t\tOR as string,\n\t\t{85101} as string,\n\t\t{1} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> OutletToDLPREP"
		}
	}
}